apiVersion: apps/v1
kind: Deployment
metadata:
  name: day2-nginx-2-3
  labels:
    app: nginx
spec:  
  strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1    # Number of extra pods to create during update
        maxUnavailable: 1  # Number of pods that can be unavailable during update
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.19
        ports:
        - containerPort: 80
      #Taints allow you to mark a node as unsuitable for certain pods, but they don't guarantee that the pod will be scheduled on a specific node. To guarantee scheduling on a specific node, you would need to use node affinity or node selectors instead.
      # Command to taint a node
      #kubectl taint nodes <node-name> key=value:NoSchedule
      #kubectl taint nodes <node-name> key=value:PreferNoSchedule
      #kubectl taint nodes <node-name> key=value:NoExecute
      # Command to remove taint from a node
      #kubectl taint nodes <node-name> -
      # taint is done on node and torelation is applied at pod level
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "nginx"
        effect: "NoSchedule"
  replicas: 2
  selector:
    matchLabels:
      app: nginx